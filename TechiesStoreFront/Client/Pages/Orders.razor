@page "/Orders"
@attribute [Authorize]
@inject HttpClient http
@using TechiesStoreFront.Shared.Models.TransactionModels
@using TechiesStoreFront.Shared.Models.OrderedItemModels
@using TechiesStoreFront.Shared.Models.ProductModels

@if(_transactions == null)
{
    <p>Loading orders...</p>
}

else
{
<link rel="stylesheet" type="text/css" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" />
<div class="container bootdey">
    <div class="panel panel-default panel-order">
        <div class="panel-heading">
            <strong>Order history</strong>
            <hr/>
        </div>
        <div class="panel-body">
            @foreach (var transaction in _transactions)
            {
                <div class="row">
                    <div class="col-md-11">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="pull-right"><span class="badge badge-info">Pending</span></div>
                                <span><strong>Order #@transaction.Id</strong></span> <br />
                                Total: $@transaction.AmountSpent <br />
                                <a data-placement="top" class="btn btn-success btn-xs fa fa-bars" @onclick="@(() => ShowItemsModal(transaction.Id))" title="Details"></a>
                            </div>
                            <div class="col-md-12">order made on: @transaction.DateOfTransaction.ToShortDateString()</div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <br />
        <br />
        <div class="panel-footer">Have an issue with your order? Contact us at techiesservice@gmail.com</div>
    </div>
</div>
}


@code {
    [CascadingParameter]
    public IModalService Modal { get; set; }
    public IEnumerable<TransactionListItem> _transactions { get; set; }
    public IEnumerable<OrderedItemListItem> _orderedItems { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _transactions = await http.GetFromJsonAsync<List<TransactionListItem>>("/api/Transaction/byUser");
    }

    void ShowItemsModal(int transactionId)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(OrderedItemsModal.TransactionId), transactionId);

        Modal.Show<OrderedItemsModal>("Ordered Items", parameters);
    }
}
